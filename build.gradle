plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

jarJar.enable()

group = 'com.redpxnda'
version = '1.0'

java {
    archivesBaseName = 'protectioncorrection'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: 'parchment', version: '2022.11.27-1.19.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'protectioncorrection'

            mods {
                protectioncorrection {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'protectioncorrection'

            mods {
                protectioncorrection {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'protectioncorrection'

            mods {
                protectioncorrection {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'protectioncorrection', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                protectioncorrection {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.4'

    //EvalEx
    minecraftLibrary("com.ezylang:EvalEx:3.0.1")
    jarJar(group: 'com.ezylang:EvalEx:3.0.1', name: 'EvalEx', version: "[3.0.1,") {
        jarJar.pin(it, '3.0.1')
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "protectioncorrection",
                //"Specification-Vendor": "protectioncorrection authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "protectioncorrection authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
